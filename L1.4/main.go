// Реализовать постоянную запись данных в канал (главный поток).
//  Реализовать набор из N воркеров, которые читают произвольные данные из канала и выводят в stdout.
//  Необходима возможность выбора количества воркеров при старте.

// Программа должна завершаться по нажатию Ctrl+C. Выбрать и обосновать способ завершения работы всех воркеров.

package main

import (
	"fmt"
	"math/rand"
	"time"
)

func main() {
	N := 10 // количество воркеров
	c := make(chan interface{})

	for i := 0; i < N; i++ {
		go func(i int) {
			for val := range c { // считывает данные из канала до тех пор, пока канал открыт => воркер работает, пока канал открыт
				fmt.Println(val, "From gorutine", i) //чтобы было видно, что пишут все воркеры, а не одна
			}
		}(i)
	}
	for {
		c <- rand.Int()                    //записываем рандомные числа в канал.
		time.Sleep(150 * time.Millisecond) //чтобы было видно что приходит в канал
	}
}
